package com.org.source.sm.model;


import java.util.List;
// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table ARTICLE.
 */
public class Article {

    /** Not-null value. */
    private String id;
    private String attribute;
    private Short comment_cnt;
    private String content;
    private Short content_type;
    private String grab_time;
    private long cid;
    private Short item_type;
    private Short oppose_cnt;
    private String original_url;
    private String publish_time;
    private Short reco_type;
    private String recoid;
    private String site;
    private String source_name;
    private String summary;
    private Short support_cnt;
    private String matched_tag;
    private String title;
    private String url;
    private Boolean valid;

    private List<ArticleToTag> articleToTag;
    private List<ArticleImage> image;
    private List<ArticleThumbnail> thumbnails;

    // KEEP FIELDS - put your custom fields here
    private List<String> tags;
    // KEEP FIELDS END

    public Article() {
    }

    public Article(String id) {
        this.id = id;
    }

    public Article(String id, String attribute, Short comment_cnt, String content, Short content_type, String grab_time, long cid, Short item_type, Short oppose_cnt, String original_url, String publish_time, Short reco_type, String recoid, String site, String source_name, String summary, Short support_cnt, String matched_tag, String title, String url, Boolean valid) {
        this.id = id;
        this.attribute = attribute;
        this.comment_cnt = comment_cnt;
        this.content = content;
        this.content_type = content_type;
        this.grab_time = grab_time;
        this.cid = cid;
        this.item_type = item_type;
        this.oppose_cnt = oppose_cnt;
        this.original_url = original_url;
        this.publish_time = publish_time;
        this.reco_type = reco_type;
        this.recoid = recoid;
        this.site = site;
        this.source_name = source_name;
        this.summary = summary;
        this.support_cnt = support_cnt;
        this.matched_tag = matched_tag;
        this.title = title;
        this.url = url;
        this.valid = valid;
    }

    /** Not-null value. */
    public String getId() {
        return id;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setId(String id) {
        this.id = id;
    }

    public String getAttribute() {
        return attribute;
    }

    public void setAttribute(String attribute) {
        this.attribute = attribute;
    }

    public Short getComment_cnt() {
        return comment_cnt;
    }

    public void setComment_cnt(Short comment_cnt) {
        this.comment_cnt = comment_cnt;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public Short getContent_type() {
        return content_type;
    }

    public void setContent_type(Short content_type) {
        this.content_type = content_type;
    }

    public String getGrab_time() {
        return grab_time;
    }

    public void setGrab_time(String grab_time) {
        this.grab_time = grab_time;
    }

    public long getCid() {
        return cid;
    }

    public void setCid(long cid) {
        this.cid = cid;
    }

    public Short getItem_type() {
        return item_type;
    }

    public void setItem_type(Short item_type) {
        this.item_type = item_type;
    }

    public Short getOppose_cnt() {
        return oppose_cnt;
    }

    public void setOppose_cnt(Short oppose_cnt) {
        this.oppose_cnt = oppose_cnt;
    }

    public String getOriginal_url() {
        return original_url;
    }

    public void setOriginal_url(String original_url) {
        this.original_url = original_url;
    }

    public String getPublish_time() {
        return publish_time;
    }

    public void setPublish_time(String publish_time) {
        this.publish_time = publish_time;
    }

    public Short getReco_type() {
        return reco_type;
    }

    public void setReco_type(Short reco_type) {
        this.reco_type = reco_type;
    }

    public String getRecoid() {
        return recoid;
    }

    public void setRecoid(String recoid) {
        this.recoid = recoid;
    }

    public String getSite() {
        return site;
    }

    public void setSite(String site) {
        this.site = site;
    }

    public String getSource_name() {
        return source_name;
    }

    public void setSource_name(String source_name) {
        this.source_name = source_name;
    }

    public String getSummary() {
        return summary;
    }

    public void setSummary(String summary) {
        this.summary = summary;
    }

    public Short getSupport_cnt() {
        return support_cnt;
    }

    public void setSupport_cnt(Short support_cnt) {
        this.support_cnt = support_cnt;
    }

    public String getMatched_tag() {
        return matched_tag;
    }

    public void setMatched_tag(String matched_tag) {
        this.matched_tag = matched_tag;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public Boolean getValid() {
        return valid;
    }

    public void setValid(Boolean valid) {
        this.valid = valid;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<ArticleToTag> getArticleToTag() {
        if (articleToTag == null) {
            ArticleToTagDao targetDao = DaoHelper.getDaoSession().getArticleToTagDao();
            List<ArticleToTag> articleToTagNew = targetDao._queryArticle_ArticleToTag(id);
            synchronized (this) {
                if(articleToTag == null) {
                    articleToTag = articleToTagNew;
                }
            }
        }
        return articleToTag;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetArticleToTag() {
        articleToTag = null;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<ArticleImage> getImage() {
        if (image == null) {
            ArticleImageDao targetDao = DaoHelper.getDaoSession().getArticleImageDao();
            List<ArticleImage> imageNew = targetDao._queryArticle_Image(id);
            synchronized (this) {
                if(image == null) {
                    image = imageNew;
                }
            }
        }
        return image;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetImage() {
        image = null;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<ArticleThumbnail> getThumbnails() {
        if (thumbnails == null) {
            ArticleThumbnailDao targetDao = DaoHelper.getDaoSession().getArticleThumbnailDao();
            List<ArticleThumbnail> thumbnailsNew = targetDao._queryArticle_Thumbnails(id);
            synchronized (this) {
                if(thumbnails == null) {
                    thumbnails = thumbnailsNew;
                }
            }
        }
        return thumbnails;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetThumbnails() {
        thumbnails = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        DaoHelper.getDaoSession().getArticleDao().delete(this);  
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        DaoHelper.getDaoSession().getArticleDao().update(this);  
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        DaoHelper.getDaoSession().getArticleDao().refresh(this);  
    }

    // KEEP METHODS - put your custom methods here
    public void setTags(List<String> tags) {
        this.tags = tags;
    }
    
    public List<String> getTags() {
        return tags;
    }

    public void save() {

        //save article to Article table, and get Aid
        DaoHelper.getDaoSession().getArticleDao().insertOrReplace(this);
        
        //set aid and save articleImage to ArticleImage
        for (ArticleImage imageItem : image) {
            imageItem.setAid(id);
            DaoHelper.getDaoSession().getArticleImageDao().insert(imageItem);
        }

        //set aid and save articleThumbnail to Thumbnails 
        for (ArticleThumbnail imageItem : thumbnails) {
            imageItem.setAid(id);
            DaoHelper.getDaoSession().getArticleThumbnailDao().insert(imageItem);
        }

        //save tag to Tag table, and get TID
        //create articleTotag and  set aid and tid and save
//        for (String tagItem : tags) {
//            Tag tag = new Tag(tagItem);
//            ArticleToTag articleToTag = new ArticleToTag();
//            articleToTag.setAid(id);
//            articleToTag.setTid(tagItem);
//            DaoHelper.getDaoSession().getTagDao().insert(tag);
//            DaoHelper.getDaoSession().getArticleToTagDao().insert(articleToTag);
//        }
    }
    // KEEP METHODS END

}
